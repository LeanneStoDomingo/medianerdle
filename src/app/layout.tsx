import "@/styles/globals.css";

import { Inter } from "next/font/google";
import { cookies } from "next/headers";

import { TRPCReactProvider } from "@/trpc/react";

import { ReactQueryDevtools } from "@tanstack/react-query-devtools";

import Link from "next/link";
import { buttonVariants } from "@/app/_components/ui/button";
import { getServerAuthSession } from "@/server/auth";

import { env } from "@/env";

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-sans",
});

export const metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={`font-sans ${inter.variable}`}>
        <TRPCReactProvider cookies={cookies().toString()}>
          <Header />
          {children}
          <TailwindIndicator />
          <ReactQueryDevtools initialIsOpen />
        </TRPCReactProvider>
      </body>
    </html>
  );
}

async function Header() {
  const session = await getServerAuthSession();

  return (
    <header className="mx-auto flex w-11/12 max-w-xl justify-between">
      <Link href="/">medianerdle</Link>
      <Link
        className={buttonVariants()}
        href={session ? "/api/auth/signout" : "/api/auth/signin"}
      >
        {session ? "Sign Out" : "Sign In"}
      </Link>
    </header>
  );
}

// https://github.com/shadcn-ui/taxonomy/blob/main/components/tailwind-indicator.tsx
function TailwindIndicator() {
  if (env.NODE_ENV === "production") return null;

  return (
    <div className="fixed bottom-1 left-1 z-50 flex h-6 w-6 items-center justify-center rounded-full bg-gray-800 p-3 font-mono text-xs text-white">
      <div className="block sm:hidden">xs</div>
      <div className="hidden sm:block md:hidden lg:hidden xl:hidden 2xl:hidden">
        sm
      </div>
      <div className="hidden md:block lg:hidden xl:hidden 2xl:hidden">md</div>
      <div className="hidden lg:block xl:hidden 2xl:hidden">lg</div>
      <div className="hidden xl:block 2xl:hidden">xl</div>
      <div className="hidden 2xl:block">2xl</div>
    </div>
  );
}
